local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local window = library:AddWindow("Nova Hub Paid Version | Encrypted Script", {
    main_color = Color3.fromRGB(41, 74, 122), -- Color
    min_size = Vector2.new(650, 606), -- Size of the gui
    can_resize = false, -- true or false
})

local Killing = window:AddTab("Killing")

-- Create the dropdown for player whitelist
local whitelist = {}  -- Store the names of whitelisted players
local dropdown = Killing:AddDropdown("Whitelist", function(text)
    -- When a player is selected from the dropdown, add them to the whitelist
    table.insert(whitelist, text)
end)

-- Dynamically add player names to the dropdown
for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Name ~= game.Players.LocalPlayer.Name then  -- Exclude the local player
        dropdown:Add(player.Name)  -- Add each player's name to the dropdown
    end
end

-- Create the textbox for unwhitelisting players
Killing:AddTextBox("Unwhitelist", function(text)
    -- If the entered name exists in the whitelist, remove it
    for i, whitelistedName in ipairs(whitelist) do
        if whitelistedName == text then
            table.remove(whitelist, i)  -- Remove the player from the whitelist
            break
        end
    end
end)

-- Create the kill aura toggle
local switch = Killing:AddSwitch("Kill Aura", function(bool)
    if bool then
        _G.autoKill = true -- Global control variable

        while _G.autoKill do
            -- Iterate over all players in the game
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer ~= game.Players.LocalPlayer and not table.find(whitelist, targetPlayer.Name) then
                    -- Simulate touch with target's character
                    local targetCharacter = targetPlayer.Character
                    if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                        local rightHand = game.Players.LocalPlayer.Character:FindFirstChild("RightHand")
                        if rightHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(rightHand, touchPart, 0) -- Simulate touch with right hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(rightHand, touchPart, 1) -- Release touch
                        end

                        local leftHand = game.Players.LocalPlayer.Character:FindFirstChild("LeftHand")
                        if leftHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(leftHand, touchPart, 0) -- Simulate touch with left hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(leftHand, touchPart, 1) -- Release touch
                        end
                    end
                end
            end
            wait(1) -- Adjust the timing to avoid overloading the server
        end
    else
        -- Stop the kill aura when toggle is disabled
        _G.autoKill = false
    end
end)

-- Targeting section
Killing:AddLabel("Targeting")

-- Add dropdown for selecting target
local dropdown = Killing:AddDropdown("Select Target", function(text)
    _G.selectedTarget = text -- Store the selected target in a global variable
end)

-- Dynamically add player names to the dropdown
for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Name ~= game.Players.LocalPlayer.Name then  -- Exclude the local player
        dropdown:Add(player.Name)  -- Add each player's name to the dropdown
    end
end 

-- Kill Target toggle
local switch = Killing:AddSwitch("Kill Target", function(bool)
    if bool then
        _G.autoKillTarget = true -- Global control variable

        while _G.autoKillTarget do
            local targetPlayerName = _G.selectedTarget
            if targetPlayerName then
                local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
                if targetPlayer then
                    local targetCharacter = targetPlayer.Character
                    if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                        -- Right Hand attack
                        local rightHand = game.Players.LocalPlayer.Character:FindFirstChild("RightHand")
                        if rightHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(rightHand, touchPart, 0) -- Simulate touch with right hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(rightHand, touchPart, 1) -- Release touch
                        end

                        -- Left Hand attack
                        local leftHand = game.Players.LocalPlayer.Character:FindFirstChild("LeftHand")
                        if leftHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(leftHand, touchPart, 0) -- Simulate touch with left hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(leftHand, touchPart, 1) -- Release touch
                        end
                    end
                end
            end
            wait(1) -- Adjust the timing to avoid overloading server with too many hits
        end
    else
        -- Stop the kill target loop
        _G.autoKillTarget = false
    end
end)

-- Auto Punch section (without animation)
Killing:AddLabel("Auto Punch")

-- Auto Punch toggle
local switch = Killing:AddSwitch("Auto Punch", function(bool)
    if bool then
        _G.autoPunch = true -- Global control variable for Auto Punch without animation

        while _G.autoPunch do
            -- Iterate over all players in the game and use the punch tool if needed
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer ~= game.Players.LocalPlayer then
                    local targetCharacter = targetPlayer.Character
                    if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                        local rightHand = game.Players.LocalPlayer.Character:FindFirstChild("RightHand")
                        if rightHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(rightHand, touchPart, 0) -- Simulate touch with right hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(rightHand, touchPart, 1) -- Release touch
                        end
                    end
                end
            end
            wait(0.1) -- Adjust the delay as needed
        end
    else
        -- Stop Auto Punch when toggle is disabled
        _G.autoPunch = false
    end
end)

-- Auto Punch [No Animation] toggle
local switch = Killing:AddSwitch("Auto Punch [No Animation]", function(bool)
    if bool then
        _G.autoPunchNoAnim = true -- Global variable for Auto Punch without animation

        -- Perform Auto Punch without any animation
        while _G.autoPunchNoAnim do
            for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                if targetPlayer ~= game.Players.LocalPlayer then
                    local targetCharacter = targetPlayer.Character
                    if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                        local rightHand = game.Players.LocalPlayer.Character:FindFirstChild("RightHand")
                        if rightHand then
                            local touchPart = targetCharacter.HumanoidRootPart
                            firetouchinterest(rightHand, touchPart, 0) -- Simulate touch with right hand
                            wait(0.1) -- Small delay before the next action
                            firetouchinterest(rightHand, touchPart, 1) -- Release touch
                        end
                    end
                end
            end
            wait(0.1) -- Adjust the delay as needed
        end
    else
        -- Stop Auto Punch without animation
        _G.autoPunchNoAnim = false
    end
end)

local Player = window:AddTab("Player")

-- Create the "Select Player" dropdown
local playerDropdown = Player:AddDropdown("Select Player", function(playerName)
    selectedPlayerName = playerName
end)

-- Dynamically add player names to the "Select Player" dropdown
for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Name ~= game.Players.LocalPlayer.Name then  -- Exclude the local player
        playerDropdown:Add(player.Name)  -- Add each player's name to the dropdown
    end
end

-- Create the "View Player" toggle
local viewPlayerToggle = Player:AddSwitch("View Player", function(bool)
    local player = game.Players.LocalPlayer
    local targetPlayer = game.Players:FindFirstChild(selectedPlayerName)

    if bool and targetPlayer then
        -- Function to update the camera subject to the target player's humanoid
        local function updateCamera()
            if targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
                game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
                game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
            else
                -- If the player is dead, set the camera to their character's HumanoidRootPart
                if targetPlayer.Character then
                    game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.HumanoidRootPart
                end
            end
        end

        -- Continuously check if the target player is valid and update the camera
        local heartbeatConnection
        heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if targetPlayer and targetPlayer.Character then
                -- Re-check the character's existence and update the camera
                updateCamera()
            else
                -- If the character is dead or no longer exists, stop updating the camera
                heartbeatConnection:Disconnect()
            end
        end)
    else
        -- Reset camera when toggle is off
        game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
        game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
    end
end)
