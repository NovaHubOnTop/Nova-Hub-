local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local window = library:AddWindow("Test", {
	main_color = Color3.fromRGB(41, 74, 122), -- Color
	min_size = Vector2.new(650, 600), -- Size of the gui
	can_resize = false, -- true or false
})



local Killing = window:AddTab("Killing")
local whitelistedPlayers = {}
local targetName = ""
local killPlayersActive = false
local autoKillActive = false
local autoEquipPunchActive = false
local killStartTime = 0
local killTimeLabel
local punchTool
local autoPunchanim = false

Killing:AddLabel("Whitelist")
Killing:AddTextBox("Whitelist Players", function(text)
    table.insert(whitelistedPlayers, text)
end)

Killing:AddTextBox("Unwhitelist Players", function(text)
    for i, player in ipairs(whitelistedPlayers) do
        if player == text then
            table.remove(whitelistedPlayers, i)
            break
        end
    end
end)

Killing:AddLabel("Auto Killing")

-- Function to restore visibility of parts
local function restoreVisibility()
    for _, otherPlayer in pairs(game.Players:GetChildren()) do
        local character = game.Workspace:FindFirstChild(otherPlayer.Name)
        if character then
            local head = character:FindFirstChild("Head")
            if head then
                local nameGui = head:FindFirstChild("nameGui")
                if nameGui then
                    local nameLabel = nameGui:FindFirstChild("nameLabel")
                    if nameLabel then
                        nameLabel.Visible = true
                    end
                    local strengthImage = nameGui:FindFirstChild("strengthImage")
                    if strengthImage then
                        strengthImage.Visible = true
                    end
                    local karmaLabel = nameGui:FindFirstChild("karmaLabel")
                    if karmaLabel then
                        karmaLabel.Visible = true
                    end
                    local rankLabel = nameGui:FindFirstChild("rankLabel")
                    if rankLabel then
                        rankLabel.Visible = true
                    end
                end
            end
        end
    end
end

-- Function to hide relevant parts for a specific character
local function makeInvisible(character)
    local head = character:FindFirstChild("Head")
    if head then
        local nameGui = head:FindFirstChild("nameGui")
        if nameGui then
            local nameLabel = nameGui:FindFirstChild("nameLabel")
            if nameLabel then
                nameLabel.Visible = false
            end
            local strengthImage = nameGui:FindFirstChild("strengthImage")
            if strengthImage then
                strengthImage.Visible = false
            end
            local karmaLabel = nameGui:FindFirstChild("karmaLabel")
            if karmaLabel then
                karmaLabel.Visible = false
            end
            local rankLabel = nameGui:FindFirstChild("rankLabel")
            if rankLabel then
                rankLabel.Visible = false
            end
        end
    end
end

-- Equip the Punch tool to the player
local function equipPunchTool()
    local player = game.Players.LocalPlayer
    local playerName = player.Name
    punchTool = player.Backpack:FindFirstChild("Punch") or game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")
    if punchTool and punchTool.Parent ~= game.Workspace:FindFirstChild(playerName) then
        punchTool.Parent = game.Workspace:FindFirstChild(playerName)
    end
end

-- Execute punch action
local function punchAction()
    local player = game.Players.LocalPlayer
    player.muscleEvent:FireServer("punch", "rightHand")
    player.muscleEvent:FireServer("punch", "leftHand")
end

Killing:AddSwitch("Auto Kill", function(state)
    autoKillActive = state
    if autoKillActive then
        coroutine.wrap(function()
            local player = game.Players.LocalPlayer
            local playerName = player.Name
            -- Hide nameGui and labels for all players except local player
            for _, otherPlayer in pairs(game.Players:GetChildren()) do
                if otherPlayer.Name ~= playerName then
                    local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                    if character then
                        makeInvisible(character)
                    end
                end
            end
            while autoKillActive do
                equipPunchTool()
                punchAction()
                for _, otherPlayer in pairs(game.Players:GetChildren()) do
                    if otherPlayer.Name ~= playerName and not table.find(whitelistedPlayers, otherPlayer.Name) then
                        local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                        local localCharacter = game.Workspace:FindFirstChild(playerName)
                        if character and localCharacter then
                            local rightHand = localCharacter:FindFirstChild("RightHand")
                            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                            if rightHand and humanoidRootPart then
                                humanoidRootPart.CFrame = rightHand.CFrame
                                makeInvisible(character)
                            end
                        end
                    end
                end
                wait(0.1)
            end
        end)()
    else
        restoreVisibility()
    end
end)

Killing:AddSwitch("Auto Equip Punch", function(state)
    autoEquipPunchActive = state
    if autoEquipPunchActive then
        coroutine.wrap(function()
            while autoEquipPunchActive do
                equipPunchTool()
                wait(0.1)
            end
        end)()
    end
end)

Killing:AddLabel("Targeting")

-- Create Dropdown for selecting a player
local dropdown = Killing:AddDropdown("Select Player", function(text)
    targetName = text
    print(text .. " selected!")
end)

-- Dynamically add player names to the dropdown
for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Name ~= game.Players.LocalPlayer.Name then  -- Exclude the local player
        dropdown:Add(player.Name)  -- Add each player's name to the dropdown
    end
end

Killing:AddSwitch("Kill Players", function(state)
    killPlayersActive = state
    if killPlayersActive then
        killStartTime = 0
        
        -- Start the kill timer coroutine
        coroutine.wrap(function()
            while killPlayersActive do
                wait(1)  -- Wait for 1 second
                killStartTime = killStartTime + 1
                local minutes = math.floor(killStartTime / 60)
                local seconds = killStartTime % 60
                -- Update the label text every second
                killTimeLabel:SetText(string.format("Amount Of Time Killing Player: %02d:%02d", minutes, seconds))
            end
        end)()

        coroutine.wrap(function()
            local player = game.Players.LocalPlayer
            local playerName = player.Name
            while killPlayersActive do
                equipPunchTool()
                punchAction()
                if targetName ~= "" then
                    for _, otherPlayer in pairs(game.Players:GetChildren()) do
                        if otherPlayer.Name == targetName then
                            local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                            local localCharacter = game.Workspace:FindFirstChild(playerName)
                            if character and localCharacter then
                                local rightHand = localCharacter:FindFirstChild("RightHand")
                                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                                if rightHand and humanoidRootPart then
                                    humanoidRootPart.CFrame = rightHand.CFrame
                                    makeInvisible(character)
                                end
                            end
                        end
                    end
                end
                wait(0.1)
            end
        end)()
    else
        restoreVisibility()
        killTimeLabel:SetText("Amount Of Time Killing Player: 00:00")
    end
end)

-- Label for displaying the kill timer
killTimeLabel = Killing:AddLabel("Amount Of Time Killing Player: 00:00")

Killing:AddSwitch("Auto Punch", function(state)
    local player = game.Players.LocalPlayer
    local playerName = player.Name
    if state then
        while state do
            equipPunchTool()
            punchAction()
            wait(0.1)
        end
    else
        print("Auto Punch is turned off")
    end
end)

Killing:AddSwitch("Auto Punch [No Animation]", function(state)
    autoPunchanim = state
    if autoPunchanim then
        while autoPunchanim do
            equipPunchTool()
            punchAction()
            wait(0.1)
        end
    else
        print("Auto Punch [No Animation] is turned off")
    end
end)

local HideNameToggle = Killing:AddSwitch("Hide Other Players's Name", function(state)
    local player = game.Players.LocalPlayer
    local playerName = player.Name
    
    -- Loop through all players in the game
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        -- Skip the local player
        if otherPlayer.Name ~= playerName then
            local character = game.Workspace:FindFirstChild(otherPlayer.Name)
            
            -- Make sure the player's character is found in the workspace
            if character then
                local head = character:FindFirstChild("Head")
                if head then
                    local nameGui = head:FindFirstChild("nameGui")  -- Find nameGui inside Head
                    if nameGui then
                        -- Search for the UI elements (strengthImage, karmaLabel, nameLabel, rankLabel)
                        local strengthImage = nameGui:FindFirstChild("strengthImage")
                        local karmaLabel = nameGui:FindFirstChild("karmaLabel")
                        local nameLabel = nameGui:FindFirstChild("nameLabel")
                        local rankLabel = nameGui:FindFirstChild("rankLabel")
                        
                        -- If all the elements are found, toggle their visibility based on the toggle state
                        if strengthImage and karmaLabel and nameLabel and rankLabel then
                            if state then
                                -- Hide the elements when the toggle is ON (only for other players)
                                strengthImage.Visible = false
                                karmaLabel.Visible = false
                                nameLabel.Visible = false
                                rankLabel.Visible = false
                            else
                                -- Restore visibility when the toggle is OFF
                                strengthImage.Visible = true
                                karmaLabel.Visible = true
                                nameLabel.Visible = true
                                rankLabel.Visible = true
                            end
                        end
                    end
                end
            end
        end
    end
end)
