local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local window = library:AddWindow("Test", {
    main_color = Color3.fromRGB(41, 74, 122),
    min_size = Vector2.new(650, 600),
    can_resize = false,
})

local Killing = window:AddTab("Killing")

-- Labels and textboxes for whitelisting
Killing:AddLabel("Whitelisting")

_G.whitelist = {}

local whitelistBox = Killing:AddTextBox("Whitelist", function(name)
    if name and name ~= "" then
        _G.whitelist[name] = true
    end
end)

local unwhitelistBox = Killing:AddTextBox("Unwhitelist", function(name)
    if name and _G.whitelist[name] then
        _G.whitelist[name] = nil
    end
end)

Killing:AddLabel("Killing Features")

-- Auto Kill Toggle
_G.autoKill = false

local autoKillToggle = Killing:AddSwitch("Auto Kill", function(state)
    _G.autoKill = state

    if state then
        task.spawn(function()
            while _G.autoKill do
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local punchTool = player.Backpack:FindFirstChild("Punch") or character:FindFirstChild("Punch")

                if punchTool and punchTool.Parent ~= character then
                    punchTool.Parent = character
                end

                game.Players.LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                game.Players.LocalPlayer.muscleEvent:FireServer("punch", "leftHand")

                for _, targetPlayer in pairs(game.Players:GetPlayers()) do
                    if targetPlayer ~= player and not _G.whitelist[targetPlayer.Name] then
                        local targetCharacter = targetPlayer.Character
                        if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                            firetouchinterest(character.RightHand, targetCharacter.HumanoidRootPart, 1)
                            firetouchinterest(character.LeftHand, targetCharacter.HumanoidRootPart, 1)
                            wait(0.1)
                            firetouchinterest(character.RightHand, targetCharacter.HumanoidRootPart, 0)
                            firetouchinterest(character.LeftHand, targetCharacter.HumanoidRootPart, 0)
                        end
                    end
                end
                wait(0.1)
            end
        end)
    end
end)

Killing:AddLabel("Targeting")

-- Dropdown for selecting a target (does not update when players join/leave)
local selectedTargetName = nil
local dropdown = Killing:AddDropdown("Select Target", function(playerName)
    selectedTargetName = playerName
end)

-- Populate dropdown once (doesn't update after script execution)
for _, player in ipairs(game.Players:GetPlayers()) do
    if player.Name ~= game.Players.LocalPlayer.Name then
        dropdown:Add(player.Name)
    end
end

-- Kill Target Toggle
_G.killTargetActive = false
_G.killTimer = 0

local timerLabel = Killing:AddLabel("Amount of time killing Target : 00:00") -- Label is created before toggle

local killTargetToggle = Killing:AddSwitch("Kill Target", function(state)
    _G.killTargetActive = state
    _G.killTimer = 0

    if state and selectedTargetName then
        task.spawn(function()
            while _G.killTargetActive do
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local targetPlayer = game.Players:FindFirstChild(selectedTargetName)

                if targetPlayer and targetPlayer.Character then
                    local punchTool = player.Backpack:FindFirstChild("Punch") or character:FindFirstChild("Punch")

                    if punchTool and punchTool.Parent ~= character then
                        punchTool.Parent = character
                    end

                    game.Players.LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                    game.Players.LocalPlayer.muscleEvent:FireServer("punch", "leftHand")

                    if targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        firetouchinterest(character.RightHand, targetPlayer.Character.HumanoidRootPart, 1)
                        firetouchinterest(character.LeftHand, targetPlayer.Character.HumanoidRootPart, 1)
                        wait(0.1)
                        firetouchinterest(character.RightHand, targetPlayer.Character.HumanoidRootPart, 0)
                        firetouchinterest(character.LeftHand, targetPlayer.Character.HumanoidRootPart, 0)
                    end
                end

                -- Timer Update
                while _G.killTargetActive do
                    _G.killTimer = _G.killTimer + 1
                    local minutes = math.floor(_G.killTimer / 60)
                    local seconds = _G.killTimer % 60
                    timerLabel:SetText(string.format("Amount of time killing Target : %02d:%02d", minutes, seconds))
                    wait(1)
                end
            end
        end)
    else
        _G.killTargetActive = false
        timerLabel:SetText("Amount of time killing Target : 00:00")
    end
end)
