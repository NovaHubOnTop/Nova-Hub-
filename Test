local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library/main/Library", true))()

local window = library:AddWindow("BLX Clan Script | Made By Encrypted", {
    main_color = Color3.fromRGB(194, 218, 184),
    min_size = Vector2.new(600, 500),
    can_resize = false,
})

local OPtab = window:AddTab("OP Things")
local OP_Auto_Rebirth_Enabled = false
local AutoRebirthUntilTarget = false
local RebirthTarget = 0

-- Choose Rebirth Target
OPtab:AddTextBox("Choose Rebirth Target", function(text)
    local target = tonumber(text)
    if target then
        RebirthTarget = target
    end
end)

-- Auto Rebirth Until Target Amount
OPtab:AddSwitch("Auto Rebirth Until Target Amount", function(state)
    AutoRebirthUntilTarget = state
    if state then
        task.spawn(AutoRebirthUntilTargetLoop)
    end
end)

local function AutoRebirthUntilTargetLoop()
    local player = game.Players.LocalPlayer
    local leaderstats = player:WaitForChild("leaderstats")
    
    while AutoRebirthUntilTarget do
        if leaderstats and leaderstats:FindFirstChild("Rebirths") then
            if leaderstats.Rebirths.Value < RebirthTarget then
                game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
            else
                AutoRebirthUntilTarget = false
            end
        end
        task.wait(0.1)
    end
end

-- Normal Auto Rebirth
OPtab:AddSwitch("Auto Rebirth (Normal Auto Rebirth)", function(enabled)
    OP_Auto_Rebirth_Enabled = enabled

    if enabled then
        local player = game.Players.LocalPlayer

        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(-8652.867, 29.2667, 2089.261)
        end

        task.spawn(function()
            while OP_Auto_Rebirth_Enabled do
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Bar Lift"].interactSeat)
                task.wait(0.5)
            end
        end)

        task.spawn(function()
            while OP_Auto_Rebirth_Enabled do
                game.Players.LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.1)
            end
        end)
    end
end)

-- OP Auto Rebirth
local OPAutoRebirth = false

OPtab:AddSwitch("OP Auto Rebirth (Packs Needed)", function(state)
    OPAutoRebirth = state
    if state then
        task.spawn(OPAutoRebirthLoop)
    end
end)

local function EquipPets(petName)
    local player = game.Players.LocalPlayer
    local petsFolder = player.petsFolder.Unique

    if petsFolder and petsFolder:FindFirstChild(petName) then
        for i = 1, 8 do
            game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("equipPet", petsFolder[petName])
        end
    end
end

local function UnequipAllPets()
    game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("unequipAllPets")
end

function OPAutoRebirthLoop()
    while OPAutoRebirth do
        EquipPets("Swift Samurai")

        game.Players.LocalPlayer.muscleEvent:FireServer("rep")

        local leaderstats = game.Players.LocalPlayer:FindFirstChild("leaderstats")
        local requiredStrength = 5000 * (leaderstats.Rebirths.Value + 1)

        while game.Players.LocalPlayer.Strength.Value < requiredStrength do
            task.wait(0.1)
        end

        UnequipAllPets()
        EquipPets("Tribal Overlord")
        game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
        
        UnequipAllPets()
        EquipPets("Swift Samurai")

        task.wait(0.1)
    end
end

-- Hide UI Frame
local HideFrame = false

OPtab:AddSwitch("Hide Frame", function(state)
    HideFrame = state
    local replicatedStorage = game:GetService("ReplicatedStorage")

    local frames = {
        replicatedStorage:FindFirstChild("strengthFrame"),
        replicatedStorage:FindFirstChild("durabilityFrame"),
        replicatedStorage:FindFirstChild("agilityFrame")
    }

    for _, frame in pairs(frames) do
        if frame then
            frame.Visible = not state
        end
    end
end)

-- Auto Eat Protein Egg
local AutoEatProteinEgg = false

OPtab:AddSwitch("Auto Eat Protein Egg Every 30 Minutes", function(state)
    AutoEatProteinEgg = state
    if state then
        task.spawn(AutoEatProteinEggLoop)
    end
end)

local function EquipProteinEggAndRep()
    local player = game.Players.LocalPlayer
    local backpack = player.Backpack

    local proteinEgg = backpack:FindFirstChild("Protein Egg")
    if proteinEgg then
        game.Players.LocalPlayer.muscleEvent:FireServer("rep")
    end
end

local function AutoEatProteinEggLoop()
    while AutoEatProteinEgg do
        EquipProteinEggAndRep()
        task.wait(1800)
    end
end

-- Stats Display
local function AbbreviateNumber(number)
    if number >= 1e15 then return string.format("%.1f Qa", number / 1e15)
    elseif number >= 1e12 then return string.format("%.1f T", number / 1e12)
    elseif number >= 1e9 then return string.format("%.1f B", number / 1e9)
    elseif number >= 1e6 then return string.format("%.1f M", number / 1e6)
    elseif number >= 1e3 then return string.format("%.1f K", number / 1e3)
    else return tostring(number)
    end
end

OPtab:AddLabel("Stats Gained In Server:")
local strengthLabel = OPtab:AddLabel("Strength: 0")
local durabilityLabel = OPtab:AddLabel("Durability: 0")
local agilityLabel = OPtab:AddLabel("Agility: 0")
local killLabel = OPtab:AddLabel("Kill: 0")
local goodKarmaLabel = OPtab:AddLabel("Good Karma: 0")
local badKarmaLabel = OPtab:AddLabel("Bad Karma: 0")

local player = game.Players.LocalPlayer
local leaderstats = player:WaitForChild("leaderstats")

local function updateStats()
    strengthLabel.Text = "Strength: " .. AbbreviateNumber(leaderstats.Strength.Value)
    durabilityLabel.Text = "Durability: " .. AbbreviateNumber(leaderstats.Durability.Value)
    agilityLabel.Text = "Agility: " .. AbbreviateNumber(leaderstats.Agility.Value)
    killLabel.Text = "Kill: " .. AbbreviateNumber(leaderstats.Kills.Value)
    goodKarmaLabel.Text = "Good Karma: " .. AbbreviateNumber(player.goodKarma.Value)
    badKarmaLabel.Text = "Bad Karma: " .. AbbreviateNumber(player.evilKarma.Value)
end

leaderstats.Strength.Changed:Connect(updateStats)
leaderstats.Durability.Changed:Connect(updateStats)
leaderstats.Agility.Changed:Connect(updateStats)
leaderstats.Kills.Changed:Connect(updateStats)
player.goodKarma.Changed:Connect(updateStats)
player.evilKarma.Changed:Connect(updateStats)
updateStats()
